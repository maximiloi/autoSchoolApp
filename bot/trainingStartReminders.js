import { PrismaClient } from '@prisma/client';
import { addDays, format, isSameDay } from 'date-fns';
import { sendTelegramMessage } from '../lib/telegramBot.js';

const prisma = new PrismaClient();

async function main() {
  const today = new Date();
  const notifyDays = [5, 3]; // –ó–∞ 5 –∏ 3 –¥–Ω—è –¥–æ –Ω–∞—á–∞–ª–∞

  const groups = await prisma.group.findMany({
    where: {
      isActive: true,
      startTrainingDate: {
        gte: today,
      },
    },
    include: {
      students: {
        where: {
          telegramId: {
            not: null,
          },
        },
      },
    },
  });

  for (const group of groups) {
    for (const daysBefore of notifyDays) {
      const notifyDate = addDays(today, daysBefore);
      if (isSameDay(group.startTrainingDate, notifyDate)) {
        for (const student of group.students) {
          await sendTelegramMessage(
            student.telegramId,
            `üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –æ–±—É—á–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ ‚Ññ ${group.groupNumber} –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ ${daysBefore} –¥–Ω–µ–π ‚Äî <b>${format(group.startTrainingDate, 'dd.MM.yyyy')}</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –Ω–∞—á–∞–ª—É –∫—É—Ä—Å–∞!`,
          );
        }
      }
    }
  }
}

main()
  .catch(console.error)
  .finally(() => prisma.$disconnect());
